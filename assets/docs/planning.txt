File for storing ideas about how this program will operate:

Base program- Limited to the terminal for user interaction
1. Lessons will be stored in "Bits", short paragraphs of ideas.
Here is an excerpt of Two Treatises of Government by John Locke:
'''
141. Fourthly. The legislative cannot transfer the power of making
laws to any other hands, for it being but a delegated power from the
people, they who have it cannot pass it over to others. The people alone
can appoint the form of the commonwealth, which is by constituting the
legislative, and appointing in whose hands that shall be. And when the
people have said, “We will submit, and be governed by laws made by
such men, and in such forms,” nobody else can say other men shall
make laws for them; nor can they be bound by any laws but such as are
enacted by those whom they have chosen and authorised to make laws
for them.
'''
Bits should be limited to a singular idea that can stand alone by itself
and be fully understood by the reader. In the event that an idea requires other ideas
to understand, we will cross this bridge later.
An example of a "Bit" in the previous example would be:

'''
The legislative cannot transfer the power of making
laws to any other hands, for it being but a delegated power from the
people, they who have it cannot pass it over to others.
'''
Lessons are in the following heirarchy:
Topics contain lessons
lessons contain chunks
chunk directory contain text and optionally questions.

Example:
Topic: Hardware Basics
Lesson: Motherboard
Chunk: CMOS
Question(s) [optional]: What is the function of the CMOS chip?

When a lesson is answered, the program should unlock the questions under that lesson.
When all questions have been sucessfully answered, the lesson should be marked as "Completed."
I need to write more database protocol.


Reasons for development:
This program will be a sort of crossbreed between Kinnu and Anki. Kinnu is a program that uses
reinforcement learning to teach lessons of questionable orgin, and Anki uses this same technique
to reinforce flashcards.
It is my belief that Kinnu has its flaws, and I am writing this to make what is, in my eyes, a better program.
According to my knowledge of Kinnu since I've last used it:
1. Kinnu is proprietary software. It is not morally wrong to try to make money, but I wish for there to be a free,
open-source alternative to this program.
2. Kinnu does not let users create their own lessons, or allow the sharing of lessons between users.
3. In my unprofessional opinion, Kinnu's blocks are too large to reinforcement learn.

Anki, while incredibly powerful for learning small facts that fit on a flashcard, has blocks so small that
entire lessons will be hard to teach. Anki allows for users to create and share their own information, which is awesome,
but the problem is that Anki has no way for the lessons to build off of eachother. It's just a sea of unorganized flashcards.
